[
	{
		"title": "XYZ Probe 1/4 bit",
		"icon": "far fa-question-circle",
		"gcode": "G38.2 Z-25 F100; \nG91 G0 Z3; \nG91 G0 X-50; \nG91 G0 Z-8.2; \nG38.2 X30 F100; \nG91 G0 X-3; \nG91 G0 Z8.2; \nG91 G0 Y-50; \nG91 G0 X50; \nG91 G0 Z-8.2; \nG38.2 Y30 F100; \nG91 G0 Y-3; \nG91 G0 Z8.2; \nG10 P0 L20 X34.355 Y-17.255 Z8;\nG90\n",
		"class": "warning",
		"tooltip": "",
		"macrokeyboardshortcut": "",
		"codetype": "gcode"
	},
	{
		"title": "XYZ Probe 1/8 bit",
		"icon": "far fa-question-circle",
		"gcode": "G38.2 Z-25 F100; \nG91 G0 Z3; \nG91 G0 X-50; \nG91 G0 Z-8.2; \nG38.2 X30 F100; \nG91 G0 X-3; \nG91 G0 Z8.2; \nG91 G0 Y-50; \nG91 G0 X50; \nG91 G0 Z-8.2; \nG38.2 Y30 F100; \nG91 G0 Y-3; \nG91 G0 Z8.2; \nG10 P1 L20 X35.943 Y-15.667 Z8\nG90",
		"class": "warning",
		"tooltip": "",
		"macrokeyboardshortcut": "",
		"codetype": "gcode"
	},
	{
		"title": "Z-Probe Direct",
		"icon": "fas fa-hand-point-down",
		"gcode": "G38.2 Z-15 F100; Probe Direct\nG10 P0 L20 Z5; Define Top\nG21 G91 G0 Z7.5\nG90",
		"class": "primary",
		"tooltip": "",
		"macrokeyboardshortcut": "ctrl+p",
		"codetype": "gcode",
		"javascript": "",
		"jsrunonstartup": false
	},
	{
		"title": "",
		"icon": "fas fa-hand-spock",
		"gcode": "G91\nG38.2 Z-25 F100; \nG91 G0 Z3; \nG91 G0 X-50; \nG91 G0 Z-6; \nG38.2 X30 F100; \nG91 G0 X-3; \nG91 G0 Z6; \nG91 G0 Y-50; \nG91 G0 X50; \nG91 G0 Z-6; \nG38.2 Y30 F100; \nG91 G0 Y-3; \nG91 G0 Z6; \nG10 P1 L20 X45.943 Y-5.667 Z3\nG90",
		"class": "primary",
		"tooltip": "",
		"macrokeyboardshortcut": "ctrl+l",
		"codetype": "gcode"
	},
	{
		"title": "Front Left G28",
		"icon": "fab fa-slack",
		"gcode": "G28;\nG90;",
		"class": "dark",
		"tooltip": "",
		"macrokeyboardshortcut": "ctrl+h",
		"codetype": "gcode"
	},
	{
		"title": "G30",
		"icon": "far fa-question-circle",
		"gcode": "G30\nG90",
		"class": "",
		"tooltip": "",
		"macrokeyboardshortcut": "",
		"codetype": "gcode"
	},
	{
		"title": "innerCircle y Probe",
		"icon": "far fa-question-circle",
		"codetype": "gcode",
		"gcode": "G91 G0;\nG38.2 Y30 F100; \n",
		"javascript": "",
		"class": "",
		"tooltip": "",
		"macrokeyboardshortcut": "",
		"jsrunonstartup": false
	},
	{
		"title": "InnerCircle Xpos",
		"icon": "far fa-question-circle",
		"codetype": "gcode",
		"gcode": "G91 G0;\nG38.2 X30 F100; ",
		"javascript": "",
		"class": "",
		"tooltip": "",
		"macrokeyboardshortcut": "",
		"jsrunonstartup": false
	},
	{
		"title": "innerXNeg",
		"icon": "far fa-question-circle",
		"codetype": "gcode",
		"gcode": "G91 G0;\nG38.2 X-30 F100; ",
		"javascript": "",
		"class": "",
		"tooltip": "",
		"macrokeyboardshortcut": "",
		"jsrunonstartup": false
	},
	{
		"title": "OuterYNeg Prob",
		"icon": "far fa-question-circle",
		"codetype": "gcode",
		"gcode": "G91 G0;\nG38.2 Y-30 F100; \n",
		"javascript": "",
		"class": "",
		"tooltip": "",
		"macrokeyboardshortcut": "",
		"jsrunonstartup": false
	},
	{
		"title": "ProbCenter",
		"icon": "fab fa-adobe",
		"codetype": "javascript",
		"gcode": "",
		"javascript": "function findCircleCenter(approxCircleDia, endmillDiameter, probeFeed) {\n\n  // var approxCircleDia = 60;\n  // var endmillDiameter = 3.175\n  // var probeFeed = 200;\n\n  var step = 0;\n  var rightside = 0,\n    leftside = 0,\n    farside = 0,\n    nearside = 0,\n    centerXdistance = 0,\n    centerYdistance = 0;\n\n  socket.off('prbResult'); // Disable old listeners\n\n  var holefindermacroStep1 = `\n  ; Header\n\n  G21 ; mm mode\n  G10 P1 L20 X0 Y0 Z0 ; zero out current location\n\n  G38.2 X` + approxCircleDia / 2 + ` F` + probeFeed + ` ; Probe X` // find right side of circle\n\n  socket.emit('runJob', {\n    data: holefindermacroStep1,\n    isJob: false,\n    completedMsg: false,\n    fileName: \"\"\n  });\n\n  socket.on('prbResult', function(prbdata) {\n    if (prbdata.state > 0) {\n      step++;\n      console.log(\"Step \" + step, prbdata);\n\n      // Steps 1-3 just positions endmill for probes that count\n\n      if (step == 1) {\n        rightside = prbdata.x\n        console.log(rightside);\n\n        var holefindermacroStep5 = `\n        G4 P0.3\n        G91\n        G0 X-1\n        G90\n        G38.2 X-` + approxCircleDia / 2 + ` F` + probeFeed + ` ; Probe X` // find left side of circle\n\n        socket.emit('runJob', {\n          data: holefindermacroStep5,\n          isJob: false,\n          completedMsg: false,\n          fileName: \"\"\n        });\n      }\n\n      if (step == 2) {\n        leftside = prbdata.x\n        var centerdistance = (rightside - leftside);\n        var holefindermacroStep6 = `\n        G4 P0.3\n        G91\n        G0 X` + centerdistance / 2 + `\n        G90\n        G10 P1 L20 X0\n        G38.2 Y` + approxCircleDia / 2 + ` F` + probeFeed + ` ; Probe Y` // find far side of circle\n\n        socket.emit('runJob', {\n          data: holefindermacroStep6,\n          isJob: false,\n          completedMsg: false,\n          fileName: \"\"\n        });\n      }\n\n      if (step == 3) {\n        farside = prbdata.y\n\n        var holefindermacroStep7 = `\n        G4 P0.3\n        G91\n        G0 Y-1\n        G90\n        G38.2 Y-` + approxCircleDia / 2 + ` F` + probeFeed + ` ; Probe Y` // find near side of circle\n\n        socket.emit('runJob', {\n          data: holefindermacroStep7,\n          isJob: false,\n          completedMsg: false,\n          fileName: \"\"\n        });\n      }\n\n      if (step == 4) {\n        nearside = prbdata.y\n        centerYdistance = (farside - nearside);\n        centerXdistance = (rightside - leftside);\n        console.log(centerXdistance, centerYdistance)\n        var holefindermacroStep7 = `\n        G4 P0.3\n        G91\n        G0 Y` + centerYdistance / 2 + `\n        G90\n        G10 P1 L20 Y0\n        `\n\n        socket.emit('runJob', {\n          data: holefindermacroStep7,\n          isJob: false,\n          completedMsg: `Probe Complete: Remove the Probe Clip and Probe GND before continuing... <hr>\n          Probed dimension X: ` + (centerXdistance + endmillDiameter).toFixed(3) + `<br>\n          Probed dimension Y: ` + (centerYdistance + endmillDiameter).toFixed(3) + `<br>\n          <hr>`,\n          fileName: \"\"\n        });\n      }\n\n    } else {\n      console.log(\"Probe Failed\")\n    }\n\n  })\n}\n\nMetro.dialog.create({\n  title: \"Center Finding Macro\",\n  content: `\n    <div class=\"row mb-0\">\n      <label class=\"cell-sm-6\">Maximum Distance between edges</label>\n      <div class=\"cell-sm-6\">\n          <input id=\"centerProbeDistance\" type=\"number\" value=\"100\" data-role=\"input\" data-append=\"mm\" data-prepend=\"<i class='fas fa-ruler-combined'></i>\" data-clear-button=\"false\">\n      </div>\n    </div>\n\n    <small>This is the approximate diameter of the circle, or the maximum width between edges of the rectangular/square hole you are probing inside</small>\n    <hr>\n    <div class=\"row mb-0\">\n      <label class=\"cell-sm-6\">Endmill Diameter</label>\n      <div class=\"cell-sm-6\">\n          <input id=\"centerProbeEndmill\" type=\"number\" value=\"6.35\" data-role=\"input\" data-append=\"mm\" data-prepend=\"<i class='fas fa-arrows-alt-h'></i>\" data-clear-button=\"false\">\n      </div>\n    </div>\n    <small>Enter the Endmill Diameter</small>\n    <hr>\n    <div class=\"row mb-0\">\n      <label class=\"cell-sm-6\">Probe Feedrate</label>\n      <div class=\"cell-sm-6\">\n          <input id=\"centerProbeFeedrate\" type=\"number\" value=\"100\" data-role=\"input\" data-append=\"mm/min\" data-prepend=\"<i class='fas fa-running'></i>\" data-clear-button=\"false\">\n      </div>\n    </div>\n    <small>How fast the probe will move - slower is safer/more accurate</small>\n    `,\n  actions: [{\n      caption: \"Run center finding Probe\",\n      cls: \"js-dialog-close success\",\n      onclick: function() {\n        var approxCircleDia = parseFloat($(\"#centerProbeDistance\").val())\n        var endmillDiameter = parseFloat($(\"#centerProbeEndmill\").val())\n        var probeFeed = parseInt($(\"#centerProbeFeedrate\").val())\n        findCircleCenter(approxCircleDia, endmillDiameter, probeFeed)\n      }\n    },\n    {\n      caption: \"Cancel\",\n      cls: \"js-dialog-close alert\",\n      onclick: function() {\n        //\n      }\n    }\n  ]\n});",
		"class": "alert",
		"tooltip": "",
		"macrokeyboardshortcut": "",
		"jsrunonstartup": false
	}
]